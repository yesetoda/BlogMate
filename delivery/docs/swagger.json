{
    "swagger": "2.0",
    "info": {
        "description": "Testing Swagger APIs.",
        "title": "TODO APIs",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "paths": {
        "/ai/chat": {
            "post": {
                "description": "Have a conversation with the AI model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Chat with AI",
                "parameters": [
                    {
                        "description": "Chat message",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AI response",
                        "schema": {
                            "$ref": "#/definitions/controllers.ChatResponse"
                        }
                    },
                    "406": {
                        "description": "Invalid input format",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "AI model error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ai/recommend": {
            "post": {
                "description": "Get AI-generated recommendations based on input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Get recommendations",
                "parameters": [
                    {
                        "description": "Input data for recommendation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated recommendations",
                        "schema": {}
                    },
                    "406": {
                        "description": "Invalid input format",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "AI model error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ai/recommend-content": {
            "post": {
                "description": "Get AI-generated content recommendations based on input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Get content recommendations",
                "parameters": [
                    {
                        "description": "Input data for recommendation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.DataXContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated content recommendations",
                        "schema": {
                            "$ref": "#/definitions/controllers.RecommendationResponse"
                        }
                    },
                    "406": {
                        "description": "Invalid input format",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "AI model error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ai/recommend-tags": {
            "post": {
                "description": "Get AI-generated tags recommendations based on input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Get tags recommendations",
                "parameters": [
                    {
                        "description": "Input data for recommendation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.DataXTags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated tags recommendations",
                        "schema": {
                            "$ref": "#/definitions/controllers.RecommendationResponse"
                        }
                    },
                    "406": {
                        "description": "Invalid input format",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "AI model error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ai/recommend-title": {
            "post": {
                "description": "Get AI-generated title recommendations based on input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Get title recommendations",
                "parameters": [
                    {
                        "description": "Input data for recommendation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.DataXTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated title recommendations",
                        "schema": {
                            "$ref": "#/definitions/controllers.RecommendationResponse"
                        }
                    },
                    "406": {
                        "description": "Invalid input format",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "AI model error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ai/summarize": {
            "post": {
                "description": "Generate AI-powered summary of input content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Summarize content",
                "parameters": [
                    {
                        "description": "Input data to summarize",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generated summary",
                        "schema": {
                            "$ref": "#/definitions/controllers.SummaryResponse"
                        }
                    },
                    "406": {
                        "description": "Invalid input format",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "AI model error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/blogs": {
            "get": {
                "description": "Retrieve a paginated list of all blog posts. Defaults: pageNumber=1, pageSize=5.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Get all blog posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of blog posts",
                        "schema": {}
                    },
                    "404": {
                        "description": "No blogs found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new blog post with the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Create a new blog post",
                "parameters": [
                    {
                        "description": "Blog post data",
                        "name": "blog",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Blog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created blog post",
                        "schema": {
                            "$ref": "#/definitions/domain.Blog"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/blogs/filter": {
            "post": {
                "description": "Retrieve blog posts based on provided filter criteria with pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Filter blog posts",
                "parameters": [
                    {
                        "description": "Filter criteria (include any fields you want to filter by)",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.BlogFilterOption"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 5)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered blog posts",
                        "schema": {}
                    },
                    "400": {
                        "description": "Invalid filter data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "No matching blogs found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/blogs/popular": {
            "get": {
                "description": "Retrieve a list of blog posts that are popular.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Get popular blog posts",
                "responses": {
                    "200": {
                        "description": "List of popular blog posts",
                        "schema": {}
                    },
                    "404": {
                        "description": "No popular blogs found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/blogs/{blogId}": {
            "get": {
                "description": "Retrieve a single blog post by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Get a blog post by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post details",
                        "schema": {
                            "$ref": "#/definitions/domain.Blog"
                        }
                    },
                    "404": {
                        "description": "Blog not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing blog post using its ID and the new data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Update a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated blog post data",
                        "name": "blog",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Blog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated blog post",
                        "schema": {
                            "$ref": "#/definitions/domain.Blog"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Blog not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing blog post using its unique ID. Requires proper ownership.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Delete a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Blog not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/blogs/{blogId}/comments": {
            "get": {
                "description": "Retrieve paginated comments for the specified blog post. Defaults: pageNumber=1, pageSize=5.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Comments"
                ],
                "summary": "Get all comments for a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments",
                        "schema": {}
                    },
                    "404": {
                        "description": "No comments found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new comment to the specified blog post.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Comments"
                ],
                "summary": "Add a comment to a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment data",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid comment data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Blog not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/blogs/{blogId}/comments/{commentId}": {
            "get": {
                "description": "Retrieve a single comment by its ID for the given blog post.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Comments"
                ],
                "summary": "Get a specific comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment details",
                        "schema": {
                            "$ref": "#/definitions/domain.Comment"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/blogs/{blogId}/comments/{commentId}/interact/{type}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Like, dislike, or view a comment by specifying the interaction type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Comments"
                ],
                "summary": "Interact with a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Interaction type (like/dislike/view)",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Interaction result",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid interaction type",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/blogs/{blogId}/comments/{commentId}/replies": {
            "get": {
                "description": "Retrieve paginated replies for the specified comment. Defaults: pageNumber=1, pageSize=5.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Comments"
                ],
                "summary": "Get all replies for a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of replies",
                        "schema": {}
                    },
                    "404": {
                        "description": "No replies found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new reply to an existing comment on a blog post.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Comments"
                ],
                "summary": "Reply to a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Reply data",
                        "name": "reply",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Reply"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reply added successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid reply data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/blogs/{blogId}/comments/{commentId}/replies/{replyId}": {
            "get": {
                "description": "Retrieve a single reply by its ID for the given comment and blog post.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Comments"
                ],
                "summary": "Get a specific reply",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reply ID",
                        "name": "replyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reply details",
                        "schema": {
                            "$ref": "#/definitions/domain.Reply"
                        }
                    },
                    "404": {
                        "description": "Reply not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/blogs/{blogId}/comments/{commentId}/replies/{replyId}/interact/{type}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Like, dislike, or view a reply by specifying the interaction type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Comments"
                ],
                "summary": "Interact with a reply",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reply ID",
                        "name": "replyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Interaction type (like/dislike/view)",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Interaction result",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid interaction type",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Reply not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/blogs/{blogId}/interact/{type}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Like, dislike, or view a blog post by specifying the interaction type.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Interactions"
                ],
                "summary": "Interact with a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Blog post ID",
                        "name": "blogId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Interaction type (like/dislike/view)",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Interaction result",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid interaction type",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Blog not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recommend/content": {
            "post": {
                "description": "Get AI-generated content recommendations based on title and tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Recommendations"
                ],
                "summary": "Get content recommendations",
                "parameters": [
                    {
                        "description": "Input data for content recommendation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response: Recommended content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error: Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: AI model error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recommend/tags": {
            "post": {
                "description": "Get AI-generated tags recommendations based on title and content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Recommendations"
                ],
                "summary": "Get tags recommendations",
                "parameters": [
                    {
                        "description": "Input data for tags recommendation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response: Recommended tags",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "error: Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: AI model error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recommend/title": {
            "post": {
                "description": "Get AI-generated title recommendations based on content and tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Recommendations"
                ],
                "summary": "Get title recommendations",
                "parameters": [
                    {
                        "description": "Input data for title recommendation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response: Recommended titles",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error: Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: AI model error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/refine": {
            "post": {
                "description": "Get AI-generated refined content based on input content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Recommendations"
                ],
                "summary": "Refine blog content",
                "parameters": [
                    {
                        "description": "Input data for content refinement",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response: Refined content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error: Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: AI model error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/summarize": {
            "post": {
                "description": "Get AI-generated summary of a blog based on title, content, and tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Recommendations"
                ],
                "summary": "Get blog summary",
                "parameters": [
                    {
                        "description": "Input data for summary generation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response: Blog summary",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error: Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: AI model error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieves users by optional username or email query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.User"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/accountVerification": {
            "get": {
                "description": "Verifies a user account using email and token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Verify account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Verification token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/demote/{username}": {
            "post": {
                "description": "Demotes a user to regular user by username",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Demote user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/demoteByEmail/{email}": {
            "post": {
                "description": "Demotes a user to regular user by email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Demote user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/forgetPassword": {
            "get": {
                "description": "Sends a password reset token to the user's email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Forget password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Sends a password reset token to the user's email (alternative method)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Forget password (alternative)",
                "parameters": [
                    {
                        "description": "Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "access_token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/promote/{username}": {
            "post": {
                "description": "Promotes a user to admin by username",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Promote user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/promoteByEmail/{email}": {
            "post": {
                "description": "Promotes a user to admin by email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Promote user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Creates a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/resetPassword": {
            "post": {
                "description": "Resets the user's password using the token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reset token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "New password info",
                        "name": "newPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieves a user by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates user information by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user data",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "406": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{uid}/refresh": {
            "post": {
                "description": "Refreshes the access token using the refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Password",
                        "name": "pwd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "refreshed access token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/validate": {
            "post": {
                "description": "Validate blog content using AI model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Recommendations"
                ],
                "summary": "Validate blog content",
                "parameters": [
                    {
                        "description": "Input data for validation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infrastructure.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response: Validation result",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "error: Invalid input data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: AI model error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ChatRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Hello, how are you?"
                }
            }
        },
        "controllers.ChatResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "I'm doing well, thank you for asking!"
                }
            }
        },
        "controllers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid data format"
                }
            }
        },
        "controllers.RecommendationResponse": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "titles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.SummaryResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "type": "string",
                    "example": "This is a summary of the provided content."
                }
            }
        },
        "domain.Blog": {
            "type": "object",
            "required": [
                "content",
                "tags",
                "title"
            ],
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "blog_id": {
                    "type": "string"
                },
                "comments": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "dislikes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "likes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "domain.BlogFilterOption": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/domain.BlogFilters"
                },
                "pagination": {
                    "$ref": "#/definitions/domain.PaginationInfo"
                }
            }
        },
        "domain.BlogFilters": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "blog_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "domain.Comment": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "blog_id": {
                    "type": "string"
                },
                "comment_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "dislikes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "likes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "replies": {
                    "type": "integer"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "domain.PaginationInfo": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "domain.Reply": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "blog_id": {
                    "type": "string"
                },
                "comment_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "dislikes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "likes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reply_id": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "expirationtoken": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "infrastructure.Data": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "infrastructure.DataXContent": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "infrastructure.DataXTags": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "infrastructure.DataXTitle": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}